#!/usr/bin/env python3


#### sample code generated by chatgpt. investigate and rewrite


"""
launcher.py

Cross-platform launcher for Chrona GUI:
- Activates Conda environment
- Runs main.py
- Works on Windows, macOS, Linux
"""

import sys
import subprocess
from pathlib import Path
import platform
import os

# ----------------------
# CONFIG
# ----------------------
PROJECT_ROOT = Path(__file__).parent.parent.resolve()
SRC_DIR = PROJECT_ROOT / "src" / "chrona"
MAIN_SCRIPT = SRC_DIR / "main.py"
CONDA_ENV_NAME = "chrona_env"  # you can also use environment.yaml if preferred

# ----------------------
# FUNCTIONS
# ----------------------
def run_command(cmd, env=None):
    """Run a command and print output in real-time."""
    print(f"Running: {' '.join(cmd)}")
    process = subprocess.Popen(cmd, env=env, stdout=subprocess.PIPE, stderr=subprocess.STDOUT, text=True)

    for line in process.stdout:
        print(line, end="")

    process.wait()
    return process.returncode

def activate_conda_and_run(script_path):
    """Activate conda environment and run main.py"""
    system = platform.system()
    if system == "Windows":
        # Use 'conda activate' via cmd.exe
        cmd = [
            "cmd.exe", "/c",
            f"conda activate {CONDA_ENV_NAME} && python \"{script_path}\""
        ]
        return run_command(cmd)
    else:
        # Mac/Linux: use bash/zsh
        shell = os.environ.get("SHELL", "/bin/bash")
        cmd = [shell, "-c", f"source $(conda info --base)/etc/profile.d/conda.sh && conda activate {CONDA_ENV_NAME} && python \"{script_path}\""]
        return run_command(cmd)

# ----------------------
# MAIN
# ----------------------
if __name__ == "__main__":
    if not MAIN_SCRIPT.exists():
        print(f"Error: main.py not found at {MAIN_SCRIPT}")
        sys.exit(1)

    exit_code = activate_conda_and_run(MAIN_SCRIPT)
    sys.exit(exit_code)
